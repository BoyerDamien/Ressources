{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Ce package centralise de multiples modules de ressource d'API\nToutes les ressources impémentent tout ou partiellement l'interface \"Ressource\" du framework Gapi\nLe but de ce package est des fournir des ressources d'API typiques déja documentées et testées.\nToutes ces ressources peuvent être utilisées dans le framework Gapi par un simple import.\n\nFramework Gapi: https://github.com/BoyerDamien/gapi",
    "title": "Ressources API",
    "contact": {
      "email": "damienboyer45@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "paths": {
    "/media": {
      "put": {
        "description": "Modifie un média existant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "UpdateMedia",
        "parameters": [
          {
            "description": "Données du média",
            "name": "media",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne le média modifié",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "post": {
        "description": "Créé un nouveau média",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "CreateMedia",
        "parameters": [
          {
            "type": "file",
            "description": "Contenu du média",
            "name": "media",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne le média créé",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/media/{id}": {
      "get": {
        "description": "Retourne des informations détaillées sur un média",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "RetrieveMedia",
        "parameters": [
          {
            "type": "string",
            "description": "le nom du média",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne un média",
            "schema": {
              "$ref": "#/definitions/Media"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "StatusNotFound",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Supprime un média existant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "DeleteMedia",
        "parameters": [
          {
            "type": "string",
            "description": "nom du média",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valide la suppression"
          },
          "202": {
            "description": "StatusAccepted",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur"
          }
        }
      }
    },
    "/medias": {
      "get": {
        "description": "Retourne des informations détaillées sur une liste de médias",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "MediaList",
        "parameters": [
          {
            "pattern": " protected | open",
            "type": "string",
            "description": "Permet le filtre par status",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Permet le filtre par mime type",
            "name": "type",
            "in": "query"
          },
          {
            "pattern": " name | created_at | updated_at | size",
            "type": "string",
            "description": "Permet de trier les résultats par champs",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Limite le nombre de résultats au nombre passé en paramètre",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filtre les résultats a partir de l'index passé en paramètre",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne une liste de médias",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "StatusNotFound",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Supprime une liste de médias",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Media"
        ],
        "operationId": "DeleteMediaList",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Liste de noms",
            "name": "names",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valide la suppression"
          },
          "202": {
            "description": "StatusAccepted",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "description": "Modifie un utilisateur existant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "Update",
        "parameters": [
          {
            "description": "Données de l'utilisateur",
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne l'utilisateur modifié",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "post": {
        "description": "Créé un nouvel utilisateur",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "description": "Données de l'utilisateur",
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne l'utilisateur créé",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "Retourne des informations détaillées sur un utilisateur",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "RetrieveUser",
        "parameters": [
          {
            "type": "string",
            "description": "l'email de l'utilisateur",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne un utilisateur",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "StatusNotFound",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Supprime un utilisateur existant",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "description": "email de l'utilisateur",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valide la suppression"
          },
          "202": {
            "description": "StatusAccepted",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "Retourne des informations détaillées sur une liste d'utilisateurs",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "UserList",
        "parameters": [
          {
            "pattern": " user | admin | customer",
            "type": "string",
            "description": "Permet le filtre par role",
            "name": "role",
            "in": "query"
          },
          {
            "pattern": " first_name | last_name | age | adress | email | created_at | updated_at",
            "type": "string",
            "description": "Permet de trier les résultats par champs",
            "name": "orderBy",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Limite le nombre de résultats au nombre passé en paramètre",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Filtre les résultats a partir de l'index passé en paramètre",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Retourne une liste d'utilisateurs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "404": {
            "description": "StatusNotFound",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Supprime une liste d'utilisateurs",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "operationId": "DeleteUserList",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Liste de mails",
            "name": "emails",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Valide la suppression"
          },
          "202": {
            "description": "StatusAccepted",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "400": {
            "description": "StatusBadRequest",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "500": {
            "description": "StatusInternalServerError",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          },
          "default": {
            "description": "Erreur",
            "schema": {
              "$ref": "#/definitions/ErrResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrResponse": {
      "description": "ErrResponse",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "Message d'erreur",
          "type": "string",
          "x-go-name": "Message",
          "example": "error"
        }
      },
      "x-go-package": "github.com/BoyerDamien/ressources/errors"
    },
    "Media": {
      "description": "Media",
      "type": "object",
      "required": [
        "name",
        "file_size",
        "type",
        "status"
      ],
      "properties": {
        "file_size": {
          "description": "Taille du fichier en ko",
          "type": "integer",
          "format": "uint64",
          "minimum": 1,
          "x-go-name": "Size",
          "example": 140
        },
        "name": {
          "description": "Nom du média",
          "type": "string",
          "x-go-name": "Name",
          "example": "image.png"
        },
        "status": {
          "description": "Status du l'image",
          "type": "string",
          "pattern": "\" protected | open\"",
          "x-go-name": "Status",
          "example": "open"
        },
        "type": {
          "description": "Mime type du fichier",
          "type": "string",
          "x-go-name": "Type",
          "example": "png"
        },
        "url": {
          "description": "Url du fichier",
          "type": "string",
          "x-go-name": "Url",
          "example": "/chemin/vers/le/fichier.png"
        }
      },
      "x-go-package": "github.com/BoyerDamien/ressources/media"
    },
    "User": {
      "description": "User",
      "type": "object",
      "required": [
        "first_name",
        "last_name",
        "password",
        "email",
        "role"
      ],
      "properties": {
        "address": {
          "description": "Address de l'utilisateur\nrequire: false",
          "type": "string",
          "x-go-name": "Address"
        },
        "age": {
          "description": "Age de l'utilisateur",
          "type": "integer",
          "format": "uint8",
          "maximum": 130,
          "minimum": 0,
          "x-go-name": "Age"
        },
        "email": {
          "description": "Email de l'utilisateur",
          "type": "string",
          "x-go-name": "Email"
        },
        "first_name": {
          "description": "Nom de l'utilisateur",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "last_name": {
          "description": "Prénom de l'utilisateur",
          "type": "string",
          "x-go-name": "LastName"
        },
        "password": {
          "description": "Mot de passe de l'utilisateur",
          "type": "string",
          "x-go-name": "Password"
        },
        "phone": {
          "description": "Numéros de téléphone de l'utilisateur\nrequire: false",
          "type": "string",
          "x-go-name": "Phone"
        },
        "role": {
          "description": "Role de l'utilisateur",
          "type": "string",
          "pattern": "\" customer | admin | user\"",
          "x-go-name": "Role"
        }
      },
      "x-go-package": "github.com/BoyerDamien/ressources/user"
    }
  }
}